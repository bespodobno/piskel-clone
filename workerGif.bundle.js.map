{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/screens/export/gif.worker.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","e","u","a","f","Error","code","length","1","NeuQuant","LZWEncoder","ByteArray","this","page","pages","newPage","pageSize","charMap","String","fromCharCode","GIFEncoder","width","height","transparent","transIndex","repeat","delay","image","pixels","indexedPixels","colorDepth","colorTab","neuQuant","usedEntry","Array","palSize","dispose","firstFrame","sample","dither","globalPalette","out","Uint8Array","cursor","getData","rv","writeByte","val","writeUTFBytes","string","charCodeAt","writeBytes","array","offset","setDelay","milliseconds","Math","round","setFrameRate","fps","setDispose","disposalCode","setRepeat","setTransparent","color","addFrame","imageData","slice","getImagePixels","analyzePixels","writeLSD","writePalette","writeNetscapeExt","writeGraphicCtrlExt","writeImageDesc","writePixels","finish","setQuality","quality","setDither","setGlobalPalette","palette","getGlobalPalette","writeHeader","buildColormap","getColormap","ditherPixels","replace","match","indexPixels","findClosest","imgq","nPix","k","j","index","findClosestRGB","kernel","serpentine","kernels","FalseFloydSteinberg","FloydSteinberg","Stucki","Atkinson","ds","data","direction","y","x","xend","idx","r1","g1","b1","er","eg","eb","end","x1","y1","max","min","used","g","b","lookupRGB","minpos","dmin","len","dr","dg","db","w","h","srcPos","count","transp","disp","writeShort","pValue","encode","stream","./LZWEncoder.js","./TypedNeuQuant.js","2","EOF","BITS","HSIZE","masks","cur_accum","a_count","maxcode","g_init_bits","ClearCode","EOFCode","initCodeSize","accum","htab","Int32Array","codetab","cur_bits","free_ent","clear_flg","char_out","outs","flush_char","cl_block","cl_hash","output","hsize","MAXCODE","n_bits","nextPixel","remaining","curPixel","init_bits","fcode","ent","hsize_reg","hshift","outer_loop","compress","3","ncycles","netsize","maxnetpos","netbiasshift","intbiasshift","intbias","gammashift","betashift","beta","betagamma","radiusbiasshift","initradius","radiusdec","initalpha","radbias","alpharadbias","alphabiasshift","prime1","prime2","prime3","prime4","minpicturebytes","samplefac","network","netindex","bias","freq","radpower","altersingle","alpha","alterneigh","radius","lo","abs","hi","contest","dist","biasdist","betafreq","bestd","bestbiasd","bestpos","bestbiaspos","v","Float64Array","init","step","lengthcount","alphadec","samplepixels","delta","rad","pix","learn","unbiasnet","q","smallpos","smallval","previouscol","startpos","inxbuild","map","best","4","renderFrame","frame","encoder","transfer","last","constructor","canTransfer","ref","results","push","buffer","self","postMessage","onmessage","event","./GIFEncoder.js"],"mappings":"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","file":"workerGif.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 28);\n","/* eslint-disable */\n// gif.worker.js 0.2.0 - https://github.com/jnordberg/gif.js\n(function e(t, n, r) { function s(o, u) { if (!n[o]) { if (!t[o]) { var a = typeof require == \"function\" && require; if (!u && a) return a(o, !0); if (i) return i(o, !0); var f = new Error(\"Cannot find module '\" + o + \"'\"); throw f.code = \"MODULE_NOT_FOUND\", f } var l = n[o] = { exports: {} }; t[o][0].call(l.exports, function (e) { var n = t[o][1][e]; return s(n ? n : e) }, l, l.exports, e, t, n, r) } return n[o].exports } var i = typeof require == \"function\" && require; for (var o = 0; o < r.length; o++)s(r[o]); return s })({ 1: [function (require, module, exports) { var NeuQuant = require(\"./TypedNeuQuant.js\"); var LZWEncoder = require(\"./LZWEncoder.js\"); function ByteArray() { this.page = -1; this.pages = []; this.newPage() } ByteArray.pageSize = 4096; ByteArray.charMap = {}; for (var i = 0; i < 256; i++)ByteArray.charMap[i] = String.fromCharCode(i); ByteArray.prototype.newPage = function () { this.pages[++this.page] = new Uint8Array(ByteArray.pageSize); this.cursor = 0 }; ByteArray.prototype.getData = function () { var rv = \"\"; for (var p = 0; p < this.pages.length; p++) { for (var i = 0; i < ByteArray.pageSize; i++) { rv += ByteArray.charMap[this.pages[p][i]] } } return rv }; ByteArray.prototype.writeByte = function (val) { if (this.cursor >= ByteArray.pageSize) this.newPage(); this.pages[this.page][this.cursor++] = val }; ByteArray.prototype.writeUTFBytes = function (string) { for (var l = string.length, i = 0; i < l; i++)this.writeByte(string.charCodeAt(i)) }; ByteArray.prototype.writeBytes = function (array, offset, length) { for (var l = length || array.length, i = offset || 0; i < l; i++)this.writeByte(array[i]) }; function GIFEncoder(width, height) { this.width = ~~width; this.height = ~~height; this.transparent = null; this.transIndex = 0; this.repeat = -1; this.delay = 0; this.image = null; this.pixels = null; this.indexedPixels = null; this.colorDepth = null; this.colorTab = null; this.neuQuant = null; this.usedEntry = new Array; this.palSize = 7; this.dispose = -1; this.firstFrame = true; this.sample = 10; this.dither = false; this.globalPalette = false; this.out = new ByteArray } GIFEncoder.prototype.setDelay = function (milliseconds) { this.delay = Math.round(milliseconds / 10) }; GIFEncoder.prototype.setFrameRate = function (fps) { this.delay = Math.round(100 / fps) }; GIFEncoder.prototype.setDispose = function (disposalCode) { if (disposalCode >= 0) this.dispose = disposalCode }; GIFEncoder.prototype.setRepeat = function (repeat) { this.repeat = repeat }; GIFEncoder.prototype.setTransparent = function (color) { this.transparent = color }; GIFEncoder.prototype.addFrame = function (imageData) { this.image = imageData; this.colorTab = this.globalPalette && this.globalPalette.slice ? this.globalPalette : null; this.getImagePixels(); this.analyzePixels(); if (this.globalPalette === true) this.globalPalette = this.colorTab; if (this.firstFrame) { this.writeLSD(); this.writePalette(); if (this.repeat >= 0) { this.writeNetscapeExt() } } this.writeGraphicCtrlExt(); this.writeImageDesc(); if (!this.firstFrame && !this.globalPalette) this.writePalette(); this.writePixels(); this.firstFrame = false }; GIFEncoder.prototype.finish = function () { this.out.writeByte(59) }; GIFEncoder.prototype.setQuality = function (quality) { if (quality < 1) quality = 1; this.sample = quality }; GIFEncoder.prototype.setDither = function (dither) { if (dither === true) dither = \"FloydSteinberg\"; this.dither = dither }; GIFEncoder.prototype.setGlobalPalette = function (palette) { this.globalPalette = palette }; GIFEncoder.prototype.getGlobalPalette = function () { return this.globalPalette && this.globalPalette.slice && this.globalPalette.slice(0) || this.globalPalette }; GIFEncoder.prototype.writeHeader = function () { this.out.writeUTFBytes(\"GIF89a\") }; GIFEncoder.prototype.analyzePixels = function () { if (!this.colorTab) { this.neuQuant = new NeuQuant(this.pixels, this.sample); this.neuQuant.buildColormap(); this.colorTab = this.neuQuant.getColormap() } if (this.dither) { this.ditherPixels(this.dither.replace(\"-serpentine\", \"\"), this.dither.match(/-serpentine/) !== null) } else { this.indexPixels() } this.pixels = null; this.colorDepth = 8; this.palSize = 7; if (this.transparent !== null) { this.transIndex = this.findClosest(this.transparent, true) } }; GIFEncoder.prototype.indexPixels = function (imgq) { var nPix = this.pixels.length / 3; this.indexedPixels = new Uint8Array(nPix); var k = 0; for (var j = 0; j < nPix; j++) { var index = this.findClosestRGB(this.pixels[k++] & 255, this.pixels[k++] & 255, this.pixels[k++] & 255); this.usedEntry[index] = true; this.indexedPixels[j] = index } }; GIFEncoder.prototype.ditherPixels = function (kernel, serpentine) { var kernels = { FalseFloydSteinberg: [[3 / 8, 1, 0], [3 / 8, 0, 1], [2 / 8, 1, 1]], FloydSteinberg: [[7 / 16, 1, 0], [3 / 16, -1, 1], [5 / 16, 0, 1], [1 / 16, 1, 1]], Stucki: [[8 / 42, 1, 0], [4 / 42, 2, 0], [2 / 42, -2, 1], [4 / 42, -1, 1], [8 / 42, 0, 1], [4 / 42, 1, 1], [2 / 42, 2, 1], [1 / 42, -2, 2], [2 / 42, -1, 2], [4 / 42, 0, 2], [2 / 42, 1, 2], [1 / 42, 2, 2]], Atkinson: [[1 / 8, 1, 0], [1 / 8, 2, 0], [1 / 8, -1, 1], [1 / 8, 0, 1], [1 / 8, 1, 1], [1 / 8, 0, 2]] }; if (!kernel || !kernels[kernel]) { throw \"Unknown dithering kernel: \" + kernel } var ds = kernels[kernel]; var index = 0, height = this.height, width = this.width, data = this.pixels; var direction = serpentine ? -1 : 1; this.indexedPixels = new Uint8Array(this.pixels.length / 3); for (var y = 0; y < height; y++) { if (serpentine) direction = direction * -1; for (var x = direction == 1 ? 0 : width - 1, xend = direction == 1 ? width : 0; x !== xend; x += direction) { index = y * width + x; var idx = index * 3; var r1 = data[idx]; var g1 = data[idx + 1]; var b1 = data[idx + 2]; idx = this.findClosestRGB(r1, g1, b1); this.usedEntry[idx] = true; this.indexedPixels[index] = idx; idx *= 3; var r2 = this.colorTab[idx]; var g2 = this.colorTab[idx + 1]; var b2 = this.colorTab[idx + 2]; var er = r1 - r2; var eg = g1 - g2; var eb = b1 - b2; for (var i = direction == 1 ? 0 : ds.length - 1, end = direction == 1 ? ds.length : 0; i !== end; i += direction) { var x1 = ds[i][1]; var y1 = ds[i][2]; if (x1 + x >= 0 && x1 + x < width && y1 + y >= 0 && y1 + y < height) { var d = ds[i][0]; idx = index + x1 + y1 * width; idx *= 3; data[idx] = Math.max(0, Math.min(255, data[idx] + er * d)); data[idx + 1] = Math.max(0, Math.min(255, data[idx + 1] + eg * d)); data[idx + 2] = Math.max(0, Math.min(255, data[idx + 2] + eb * d)) } } } } }; GIFEncoder.prototype.findClosest = function (c, used) { return this.findClosestRGB((c & 16711680) >> 16, (c & 65280) >> 8, c & 255, used) }; GIFEncoder.prototype.findClosestRGB = function (r, g, b, used) { if (this.colorTab === null) return -1; if (this.neuQuant && !used) { return this.neuQuant.lookupRGB(r, g, b) } var c = b | g << 8 | r << 16; var minpos = 0; var dmin = 256 * 256 * 256; var len = this.colorTab.length; for (var i = 0, index = 0; i < len; index++) { var dr = r - (this.colorTab[i++] & 255); var dg = g - (this.colorTab[i++] & 255); var db = b - (this.colorTab[i++] & 255); var d = dr * dr + dg * dg + db * db; if ((!used || this.usedEntry[index]) && d < dmin) { dmin = d; minpos = index } } return minpos }; GIFEncoder.prototype.getImagePixels = function () { var w = this.width; var h = this.height; this.pixels = new Uint8Array(w * h * 3); var data = this.image; var srcPos = 0; var count = 0; for (var i = 0; i < h; i++) { for (var j = 0; j < w; j++) { this.pixels[count++] = data[srcPos++]; this.pixels[count++] = data[srcPos++]; this.pixels[count++] = data[srcPos++]; srcPos++ } } }; GIFEncoder.prototype.writeGraphicCtrlExt = function () { this.out.writeByte(33); this.out.writeByte(249); this.out.writeByte(4); var transp, disp; if (this.transparent === null) { transp = 0; disp = 0 } else { transp = 1; disp = 2 } if (this.dispose >= 0) { disp = dispose & 7 } disp <<= 2; this.out.writeByte(0 | disp | 0 | transp); this.writeShort(this.delay); this.out.writeByte(this.transIndex); this.out.writeByte(0) }; GIFEncoder.prototype.writeImageDesc = function () { this.out.writeByte(44); this.writeShort(0); this.writeShort(0); this.writeShort(this.width); this.writeShort(this.height); if (this.firstFrame || this.globalPalette) { this.out.writeByte(0) } else { this.out.writeByte(128 | 0 | 0 | 0 | this.palSize) } }; GIFEncoder.prototype.writeLSD = function () { this.writeShort(this.width); this.writeShort(this.height); this.out.writeByte(128 | 112 | 0 | this.palSize); this.out.writeByte(0); this.out.writeByte(0) }; GIFEncoder.prototype.writeNetscapeExt = function () { this.out.writeByte(33); this.out.writeByte(255); this.out.writeByte(11); this.out.writeUTFBytes(\"NETSCAPE2.0\"); this.out.writeByte(3); this.out.writeByte(1); this.writeShort(this.repeat); this.out.writeByte(0) }; GIFEncoder.prototype.writePalette = function () { this.out.writeBytes(this.colorTab); var n = 3 * 256 - this.colorTab.length; for (var i = 0; i < n; i++)this.out.writeByte(0) }; GIFEncoder.prototype.writeShort = function (pValue) { this.out.writeByte(pValue & 255); this.out.writeByte(pValue >> 8 & 255) }; GIFEncoder.prototype.writePixels = function () { var enc = new LZWEncoder(this.width, this.height, this.indexedPixels, this.colorDepth); enc.encode(this.out) }; GIFEncoder.prototype.stream = function () { return this.out }; module.exports = GIFEncoder }, { \"./LZWEncoder.js\": 2, \"./TypedNeuQuant.js\": 3 }], 2: [function (require, module, exports) { var EOF = -1; var BITS = 12; var HSIZE = 5003; var masks = [0, 1, 3, 7, 15, 31, 63, 127, 255, 511, 1023, 2047, 4095, 8191, 16383, 32767, 65535]; function LZWEncoder(width, height, pixels, colorDepth) { var initCodeSize = Math.max(2, colorDepth); var accum = new Uint8Array(256); var htab = new Int32Array(HSIZE); var codetab = new Int32Array(HSIZE); var cur_accum, cur_bits = 0; var a_count; var free_ent = 0; var maxcode; var clear_flg = false; var g_init_bits, ClearCode, EOFCode; function char_out(c, outs) { accum[a_count++] = c; if (a_count >= 254) flush_char(outs) } function cl_block(outs) { cl_hash(HSIZE); free_ent = ClearCode + 2; clear_flg = true; output(ClearCode, outs) } function cl_hash(hsize) { for (var i = 0; i < hsize; ++i)htab[i] = -1 } function compress(init_bits, outs) { var fcode, c, i, ent, disp, hsize_reg, hshift; g_init_bits = init_bits; clear_flg = false; n_bits = g_init_bits; maxcode = MAXCODE(n_bits); ClearCode = 1 << init_bits - 1; EOFCode = ClearCode + 1; free_ent = ClearCode + 2; a_count = 0; ent = nextPixel(); hshift = 0; for (fcode = HSIZE; fcode < 65536; fcode *= 2)++hshift; hshift = 8 - hshift; hsize_reg = HSIZE; cl_hash(hsize_reg); output(ClearCode, outs); outer_loop: while ((c = nextPixel()) != EOF) { fcode = (c << BITS) + ent; i = c << hshift ^ ent; if (htab[i] === fcode) { ent = codetab[i]; continue } else if (htab[i] >= 0) { disp = hsize_reg - i; if (i === 0) disp = 1; do { if ((i -= disp) < 0) i += hsize_reg; if (htab[i] === fcode) { ent = codetab[i]; continue outer_loop } } while (htab[i] >= 0) } output(ent, outs); ent = c; if (free_ent < 1 << BITS) { codetab[i] = free_ent++; htab[i] = fcode } else { cl_block(outs) } } output(ent, outs); output(EOFCode, outs) } function encode(outs) { outs.writeByte(initCodeSize); remaining = width * height; curPixel = 0; compress(initCodeSize + 1, outs); outs.writeByte(0) } function flush_char(outs) { if (a_count > 0) { outs.writeByte(a_count); outs.writeBytes(accum, 0, a_count); a_count = 0 } } function MAXCODE(n_bits) { return (1 << n_bits) - 1 } function nextPixel() { if (remaining === 0) return EOF; --remaining; var pix = pixels[curPixel++]; return pix & 255 } function output(code, outs) { cur_accum &= masks[cur_bits]; if (cur_bits > 0) cur_accum |= code << cur_bits; else cur_accum = code; cur_bits += n_bits; while (cur_bits >= 8) { char_out(cur_accum & 255, outs); cur_accum >>= 8; cur_bits -= 8 } if (free_ent > maxcode || clear_flg) { if (clear_flg) { maxcode = MAXCODE(n_bits = g_init_bits); clear_flg = false } else { ++n_bits; if (n_bits == BITS) maxcode = 1 << BITS; else maxcode = MAXCODE(n_bits) } } if (code == EOFCode) { while (cur_bits > 0) { char_out(cur_accum & 255, outs); cur_accum >>= 8; cur_bits -= 8 } flush_char(outs) } } this.encode = encode } module.exports = LZWEncoder }, {}], 3: [function (require, module, exports) { var ncycles = 100; var netsize = 256; var maxnetpos = netsize - 1; var netbiasshift = 4; var intbiasshift = 16; var intbias = 1 << intbiasshift; var gammashift = 10; var gamma = 1 << gammashift; var betashift = 10; var beta = intbias >> betashift; var betagamma = intbias << gammashift - betashift; var initrad = netsize >> 3; var radiusbiasshift = 6; var radiusbias = 1 << radiusbiasshift; var initradius = initrad * radiusbias; var radiusdec = 30; var alphabiasshift = 10; var initalpha = 1 << alphabiasshift; var alphadec; var radbiasshift = 8; var radbias = 1 << radbiasshift; var alpharadbshift = alphabiasshift + radbiasshift; var alpharadbias = 1 << alpharadbshift; var prime1 = 499; var prime2 = 491; var prime3 = 487; var prime4 = 503; var minpicturebytes = 3 * prime4; function NeuQuant(pixels, samplefac) { var network; var netindex; var bias; var freq; var radpower; function init() { network = []; netindex = new Int32Array(256); bias = new Int32Array(netsize); freq = new Int32Array(netsize); radpower = new Int32Array(netsize >> 3); var i, v; for (i = 0; i < netsize; i++) { v = (i << netbiasshift + 8) / netsize; network[i] = new Float64Array([v, v, v, 0]); freq[i] = intbias / netsize; bias[i] = 0 } } function unbiasnet() { for (var i = 0; i < netsize; i++) { network[i][0] >>= netbiasshift; network[i][1] >>= netbiasshift; network[i][2] >>= netbiasshift; network[i][3] = i } } function altersingle(alpha, i, b, g, r) { network[i][0] -= alpha * (network[i][0] - b) / initalpha; network[i][1] -= alpha * (network[i][1] - g) / initalpha; network[i][2] -= alpha * (network[i][2] - r) / initalpha } function alterneigh(radius, i, b, g, r) { var lo = Math.abs(i - radius); var hi = Math.min(i + radius, netsize); var j = i + 1; var k = i - 1; var m = 1; var p, a; while (j < hi || k > lo) { a = radpower[m++]; if (j < hi) { p = network[j++]; p[0] -= a * (p[0] - b) / alpharadbias; p[1] -= a * (p[1] - g) / alpharadbias; p[2] -= a * (p[2] - r) / alpharadbias } if (k > lo) { p = network[k--]; p[0] -= a * (p[0] - b) / alpharadbias; p[1] -= a * (p[1] - g) / alpharadbias; p[2] -= a * (p[2] - r) / alpharadbias } } } function contest(b, g, r) { var bestd = ~(1 << 31); var bestbiasd = bestd; var bestpos = -1; var bestbiaspos = bestpos; var i, n, dist, biasdist, betafreq; for (i = 0; i < netsize; i++) { n = network[i]; dist = Math.abs(n[0] - b) + Math.abs(n[1] - g) + Math.abs(n[2] - r); if (dist < bestd) { bestd = dist; bestpos = i } biasdist = dist - (bias[i] >> intbiasshift - netbiasshift); if (biasdist < bestbiasd) { bestbiasd = biasdist; bestbiaspos = i } betafreq = freq[i] >> betashift; freq[i] -= betafreq; bias[i] += betafreq << gammashift } freq[bestpos] += beta; bias[bestpos] -= betagamma; return bestbiaspos } function inxbuild() { var i, j, p, q, smallpos, smallval, previouscol = 0, startpos = 0; for (i = 0; i < netsize; i++) { p = network[i]; smallpos = i; smallval = p[1]; for (j = i + 1; j < netsize; j++) { q = network[j]; if (q[1] < smallval) { smallpos = j; smallval = q[1] } } q = network[smallpos]; if (i != smallpos) { j = q[0]; q[0] = p[0]; p[0] = j; j = q[1]; q[1] = p[1]; p[1] = j; j = q[2]; q[2] = p[2]; p[2] = j; j = q[3]; q[3] = p[3]; p[3] = j } if (smallval != previouscol) { netindex[previouscol] = startpos + i >> 1; for (j = previouscol + 1; j < smallval; j++)netindex[j] = i; previouscol = smallval; startpos = i } } netindex[previouscol] = startpos + maxnetpos >> 1; for (j = previouscol + 1; j < 256; j++)netindex[j] = maxnetpos } function inxsearch(b, g, r) { var a, p, dist; var bestd = 1e3; var best = -1; var i = netindex[g]; var j = i - 1; while (i < netsize || j >= 0) { if (i < netsize) { p = network[i]; dist = p[1] - g; if (dist >= bestd) i = netsize; else { i++; if (dist < 0) dist = -dist; a = p[0] - b; if (a < 0) a = -a; dist += a; if (dist < bestd) { a = p[2] - r; if (a < 0) a = -a; dist += a; if (dist < bestd) { bestd = dist; best = p[3] } } } } if (j >= 0) { p = network[j]; dist = g - p[1]; if (dist >= bestd) j = -1; else { j--; if (dist < 0) dist = -dist; a = p[0] - b; if (a < 0) a = -a; dist += a; if (dist < bestd) { a = p[2] - r; if (a < 0) a = -a; dist += a; if (dist < bestd) { bestd = dist; best = p[3] } } } } } return best } function learn() { var i; var lengthcount = pixels.length; var alphadec = 30 + (samplefac - 1) / 3; var samplepixels = lengthcount / (3 * samplefac); var delta = ~~(samplepixels / ncycles); var alpha = initalpha; var radius = initradius; var rad = radius >> radiusbiasshift; if (rad <= 1) rad = 0; for (i = 0; i < rad; i++)radpower[i] = alpha * ((rad * rad - i * i) * radbias / (rad * rad)); var step; if (lengthcount < minpicturebytes) { samplefac = 1; step = 3 } else if (lengthcount % prime1 !== 0) { step = 3 * prime1 } else if (lengthcount % prime2 !== 0) { step = 3 * prime2 } else if (lengthcount % prime3 !== 0) { step = 3 * prime3 } else { step = 3 * prime4 } var b, g, r, j; var pix = 0; i = 0; while (i < samplepixels) { b = (pixels[pix] & 255) << netbiasshift; g = (pixels[pix + 1] & 255) << netbiasshift; r = (pixels[pix + 2] & 255) << netbiasshift; j = contest(b, g, r); altersingle(alpha, j, b, g, r); if (rad !== 0) alterneigh(rad, j, b, g, r); pix += step; if (pix >= lengthcount) pix -= lengthcount; i++; if (delta === 0) delta = 1; if (i % delta === 0) { alpha -= alpha / alphadec; radius -= radius / radiusdec; rad = radius >> radiusbiasshift; if (rad <= 1) rad = 0; for (j = 0; j < rad; j++)radpower[j] = alpha * ((rad * rad - j * j) * radbias / (rad * rad)) } } } function buildColormap() { init(); learn(); unbiasnet(); inxbuild() } this.buildColormap = buildColormap; function getColormap() { var map = []; var index = []; for (var i = 0; i < netsize; i++)index[network[i][3]] = i; var k = 0; for (var l = 0; l < netsize; l++) { var j = index[l]; map[k++] = network[j][0]; map[k++] = network[j][1]; map[k++] = network[j][2] } return map } this.getColormap = getColormap; this.lookupRGB = inxsearch } module.exports = NeuQuant }, {}], 4: [function (require, module, exports) { var GIFEncoder, renderFrame; GIFEncoder = require(\"./GIFEncoder.js\"); renderFrame = function (frame) { var encoder, page, stream, transfer; encoder = new GIFEncoder(frame.width, frame.height); if (frame.index === 0) { encoder.writeHeader() } else { encoder.firstFrame = false } encoder.setTransparent(frame.transparent); encoder.setRepeat(frame.repeat); encoder.setDelay(frame.delay); encoder.setQuality(frame.quality); encoder.setDither(frame.dither); encoder.setGlobalPalette(frame.globalPalette); encoder.addFrame(frame.data); if (frame.last) { encoder.finish() } if (frame.globalPalette === true) { frame.globalPalette = encoder.getGlobalPalette() } stream = encoder.stream(); frame.data = stream.pages; frame.cursor = stream.cursor; frame.pageSize = stream.constructor.pageSize; if (frame.canTransfer) { transfer = function () { var i, len, ref, results; ref = frame.data; results = []; for (i = 0, len = ref.length; i < len; i++) { page = ref[i]; results.push(page.buffer) } return results }(); return self.postMessage(frame, transfer) } else { return self.postMessage(frame) } }; self.onmessage = function (event) { return renderFrame(event.data) } }, { \"./GIFEncoder.js\": 1 }] }, {}, [4]);\n//# sourceMappingURL=gif.worker.js.map// gif.worker.js 0.2.0 - https://github.com/jnordberg/gif.js\n(function e(t, n, r) { function s(o, u) { if (!n[o]) { if (!t[o]) { var a = typeof require == \"function\" && require; if (!u && a) return a(o, !0); if (i) return i(o, !0); var f = new Error(\"Cannot find module '\" + o + \"'\"); throw f.code = \"MODULE_NOT_FOUND\", f } var l = n[o] = { exports: {} }; t[o][0].call(l.exports, function (e) { var n = t[o][1][e]; return s(n ? n : e) }, l, l.exports, e, t, n, r) } return n[o].exports } var i = typeof require == \"function\" && require; for (var o = 0; o < r.length; o++)s(r[o]); return s })({ 1: [function (require, module, exports) { var NeuQuant = require(\"./TypedNeuQuant.js\"); var LZWEncoder = require(\"./LZWEncoder.js\"); function ByteArray() { this.page = -1; this.pages = []; this.newPage() } ByteArray.pageSize = 4096; ByteArray.charMap = {}; for (var i = 0; i < 256; i++)ByteArray.charMap[i] = String.fromCharCode(i); ByteArray.prototype.newPage = function () { this.pages[++this.page] = new Uint8Array(ByteArray.pageSize); this.cursor = 0 }; ByteArray.prototype.getData = function () { var rv = \"\"; for (var p = 0; p < this.pages.length; p++) { for (var i = 0; i < ByteArray.pageSize; i++) { rv += ByteArray.charMap[this.pages[p][i]] } } return rv }; ByteArray.prototype.writeByte = function (val) { if (this.cursor >= ByteArray.pageSize) this.newPage(); this.pages[this.page][this.cursor++] = val }; ByteArray.prototype.writeUTFBytes = function (string) { for (var l = string.length, i = 0; i < l; i++)this.writeByte(string.charCodeAt(i)) }; ByteArray.prototype.writeBytes = function (array, offset, length) { for (var l = length || array.length, i = offset || 0; i < l; i++)this.writeByte(array[i]) }; function GIFEncoder(width, height) { this.width = ~~width; this.height = ~~height; this.transparent = null; this.transIndex = 0; this.repeat = -1; this.delay = 0; this.image = null; this.pixels = null; this.indexedPixels = null; this.colorDepth = null; this.colorTab = null; this.neuQuant = null; this.usedEntry = new Array; this.palSize = 7; this.dispose = -1; this.firstFrame = true; this.sample = 10; this.dither = false; this.globalPalette = false; this.out = new ByteArray } GIFEncoder.prototype.setDelay = function (milliseconds) { this.delay = Math.round(milliseconds / 10) }; GIFEncoder.prototype.setFrameRate = function (fps) { this.delay = Math.round(100 / fps) }; GIFEncoder.prototype.setDispose = function (disposalCode) { if (disposalCode >= 0) this.dispose = disposalCode }; GIFEncoder.prototype.setRepeat = function (repeat) { this.repeat = repeat }; GIFEncoder.prototype.setTransparent = function (color) { this.transparent = color }; GIFEncoder.prototype.addFrame = function (imageData) { this.image = imageData; this.colorTab = this.globalPalette && this.globalPalette.slice ? this.globalPalette : null; this.getImagePixels(); this.analyzePixels(); if (this.globalPalette === true) this.globalPalette = this.colorTab; if (this.firstFrame) { this.writeLSD(); this.writePalette(); if (this.repeat >= 0) { this.writeNetscapeExt() } } this.writeGraphicCtrlExt(); this.writeImageDesc(); if (!this.firstFrame && !this.globalPalette) this.writePalette(); this.writePixels(); this.firstFrame = false }; GIFEncoder.prototype.finish = function () { this.out.writeByte(59) }; GIFEncoder.prototype.setQuality = function (quality) { if (quality < 1) quality = 1; this.sample = quality }; GIFEncoder.prototype.setDither = function (dither) { if (dither === true) dither = \"FloydSteinberg\"; this.dither = dither }; GIFEncoder.prototype.setGlobalPalette = function (palette) { this.globalPalette = palette }; GIFEncoder.prototype.getGlobalPalette = function () { return this.globalPalette && this.globalPalette.slice && this.globalPalette.slice(0) || this.globalPalette }; GIFEncoder.prototype.writeHeader = function () { this.out.writeUTFBytes(\"GIF89a\") }; GIFEncoder.prototype.analyzePixels = function () { if (!this.colorTab) { this.neuQuant = new NeuQuant(this.pixels, this.sample); this.neuQuant.buildColormap(); this.colorTab = this.neuQuant.getColormap() } if (this.dither) { this.ditherPixels(this.dither.replace(\"-serpentine\", \"\"), this.dither.match(/-serpentine/) !== null) } else { this.indexPixels() } this.pixels = null; this.colorDepth = 8; this.palSize = 7; if (this.transparent !== null) { this.transIndex = this.findClosest(this.transparent, true) } }; GIFEncoder.prototype.indexPixels = function (imgq) { var nPix = this.pixels.length / 3; this.indexedPixels = new Uint8Array(nPix); var k = 0; for (var j = 0; j < nPix; j++) { var index = this.findClosestRGB(this.pixels[k++] & 255, this.pixels[k++] & 255, this.pixels[k++] & 255); this.usedEntry[index] = true; this.indexedPixels[j] = index } }; GIFEncoder.prototype.ditherPixels = function (kernel, serpentine) { var kernels = { FalseFloydSteinberg: [[3 / 8, 1, 0], [3 / 8, 0, 1], [2 / 8, 1, 1]], FloydSteinberg: [[7 / 16, 1, 0], [3 / 16, -1, 1], [5 / 16, 0, 1], [1 / 16, 1, 1]], Stucki: [[8 / 42, 1, 0], [4 / 42, 2, 0], [2 / 42, -2, 1], [4 / 42, -1, 1], [8 / 42, 0, 1], [4 / 42, 1, 1], [2 / 42, 2, 1], [1 / 42, -2, 2], [2 / 42, -1, 2], [4 / 42, 0, 2], [2 / 42, 1, 2], [1 / 42, 2, 2]], Atkinson: [[1 / 8, 1, 0], [1 / 8, 2, 0], [1 / 8, -1, 1], [1 / 8, 0, 1], [1 / 8, 1, 1], [1 / 8, 0, 2]] }; if (!kernel || !kernels[kernel]) { throw \"Unknown dithering kernel: \" + kernel } var ds = kernels[kernel]; var index = 0, height = this.height, width = this.width, data = this.pixels; var direction = serpentine ? -1 : 1; this.indexedPixels = new Uint8Array(this.pixels.length / 3); for (var y = 0; y < height; y++) { if (serpentine) direction = direction * -1; for (var x = direction == 1 ? 0 : width - 1, xend = direction == 1 ? width : 0; x !== xend; x += direction) { index = y * width + x; var idx = index * 3; var r1 = data[idx]; var g1 = data[idx + 1]; var b1 = data[idx + 2]; idx = this.findClosestRGB(r1, g1, b1); this.usedEntry[idx] = true; this.indexedPixels[index] = idx; idx *= 3; var r2 = this.colorTab[idx]; var g2 = this.colorTab[idx + 1]; var b2 = this.colorTab[idx + 2]; var er = r1 - r2; var eg = g1 - g2; var eb = b1 - b2; for (var i = direction == 1 ? 0 : ds.length - 1, end = direction == 1 ? ds.length : 0; i !== end; i += direction) { var x1 = ds[i][1]; var y1 = ds[i][2]; if (x1 + x >= 0 && x1 + x < width && y1 + y >= 0 && y1 + y < height) { var d = ds[i][0]; idx = index + x1 + y1 * width; idx *= 3; data[idx] = Math.max(0, Math.min(255, data[idx] + er * d)); data[idx + 1] = Math.max(0, Math.min(255, data[idx + 1] + eg * d)); data[idx + 2] = Math.max(0, Math.min(255, data[idx + 2] + eb * d)) } } } } }; GIFEncoder.prototype.findClosest = function (c, used) { return this.findClosestRGB((c & 16711680) >> 16, (c & 65280) >> 8, c & 255, used) }; GIFEncoder.prototype.findClosestRGB = function (r, g, b, used) { if (this.colorTab === null) return -1; if (this.neuQuant && !used) { return this.neuQuant.lookupRGB(r, g, b) } var c = b | g << 8 | r << 16; var minpos = 0; var dmin = 256 * 256 * 256; var len = this.colorTab.length; for (var i = 0, index = 0; i < len; index++) { var dr = r - (this.colorTab[i++] & 255); var dg = g - (this.colorTab[i++] & 255); var db = b - (this.colorTab[i++] & 255); var d = dr * dr + dg * dg + db * db; if ((!used || this.usedEntry[index]) && d < dmin) { dmin = d; minpos = index } } return minpos }; GIFEncoder.prototype.getImagePixels = function () { var w = this.width; var h = this.height; this.pixels = new Uint8Array(w * h * 3); var data = this.image; var srcPos = 0; var count = 0; for (var i = 0; i < h; i++) { for (var j = 0; j < w; j++) { this.pixels[count++] = data[srcPos++]; this.pixels[count++] = data[srcPos++]; this.pixels[count++] = data[srcPos++]; srcPos++ } } }; GIFEncoder.prototype.writeGraphicCtrlExt = function () { this.out.writeByte(33); this.out.writeByte(249); this.out.writeByte(4); var transp, disp; if (this.transparent === null) { transp = 0; disp = 0 } else { transp = 1; disp = 2 } if (this.dispose >= 0) { disp = dispose & 7 } disp <<= 2; this.out.writeByte(0 | disp | 0 | transp); this.writeShort(this.delay); this.out.writeByte(this.transIndex); this.out.writeByte(0) }; GIFEncoder.prototype.writeImageDesc = function () { this.out.writeByte(44); this.writeShort(0); this.writeShort(0); this.writeShort(this.width); this.writeShort(this.height); if (this.firstFrame || this.globalPalette) { this.out.writeByte(0) } else { this.out.writeByte(128 | 0 | 0 | 0 | this.palSize) } }; GIFEncoder.prototype.writeLSD = function () { this.writeShort(this.width); this.writeShort(this.height); this.out.writeByte(128 | 112 | 0 | this.palSize); this.out.writeByte(0); this.out.writeByte(0) }; GIFEncoder.prototype.writeNetscapeExt = function () { this.out.writeByte(33); this.out.writeByte(255); this.out.writeByte(11); this.out.writeUTFBytes(\"NETSCAPE2.0\"); this.out.writeByte(3); this.out.writeByte(1); this.writeShort(this.repeat); this.out.writeByte(0) }; GIFEncoder.prototype.writePalette = function () { this.out.writeBytes(this.colorTab); var n = 3 * 256 - this.colorTab.length; for (var i = 0; i < n; i++)this.out.writeByte(0) }; GIFEncoder.prototype.writeShort = function (pValue) { this.out.writeByte(pValue & 255); this.out.writeByte(pValue >> 8 & 255) }; GIFEncoder.prototype.writePixels = function () { var enc = new LZWEncoder(this.width, this.height, this.indexedPixels, this.colorDepth); enc.encode(this.out) }; GIFEncoder.prototype.stream = function () { return this.out }; module.exports = GIFEncoder }, { \"./LZWEncoder.js\": 2, \"./TypedNeuQuant.js\": 3 }], 2: [function (require, module, exports) { var EOF = -1; var BITS = 12; var HSIZE = 5003; var masks = [0, 1, 3, 7, 15, 31, 63, 127, 255, 511, 1023, 2047, 4095, 8191, 16383, 32767, 65535]; function LZWEncoder(width, height, pixels, colorDepth) { var initCodeSize = Math.max(2, colorDepth); var accum = new Uint8Array(256); var htab = new Int32Array(HSIZE); var codetab = new Int32Array(HSIZE); var cur_accum, cur_bits = 0; var a_count; var free_ent = 0; var maxcode; var clear_flg = false; var g_init_bits, ClearCode, EOFCode; function char_out(c, outs) { accum[a_count++] = c; if (a_count >= 254) flush_char(outs) } function cl_block(outs) { cl_hash(HSIZE); free_ent = ClearCode + 2; clear_flg = true; output(ClearCode, outs) } function cl_hash(hsize) { for (var i = 0; i < hsize; ++i)htab[i] = -1 } function compress(init_bits, outs) { var fcode, c, i, ent, disp, hsize_reg, hshift; g_init_bits = init_bits; clear_flg = false; n_bits = g_init_bits; maxcode = MAXCODE(n_bits); ClearCode = 1 << init_bits - 1; EOFCode = ClearCode + 1; free_ent = ClearCode + 2; a_count = 0; ent = nextPixel(); hshift = 0; for (fcode = HSIZE; fcode < 65536; fcode *= 2)++hshift; hshift = 8 - hshift; hsize_reg = HSIZE; cl_hash(hsize_reg); output(ClearCode, outs); outer_loop: while ((c = nextPixel()) != EOF) { fcode = (c << BITS) + ent; i = c << hshift ^ ent; if (htab[i] === fcode) { ent = codetab[i]; continue } else if (htab[i] >= 0) { disp = hsize_reg - i; if (i === 0) disp = 1; do { if ((i -= disp) < 0) i += hsize_reg; if (htab[i] === fcode) { ent = codetab[i]; continue outer_loop } } while (htab[i] >= 0) } output(ent, outs); ent = c; if (free_ent < 1 << BITS) { codetab[i] = free_ent++; htab[i] = fcode } else { cl_block(outs) } } output(ent, outs); output(EOFCode, outs) } function encode(outs) { outs.writeByte(initCodeSize); remaining = width * height; curPixel = 0; compress(initCodeSize + 1, outs); outs.writeByte(0) } function flush_char(outs) { if (a_count > 0) { outs.writeByte(a_count); outs.writeBytes(accum, 0, a_count); a_count = 0 } } function MAXCODE(n_bits) { return (1 << n_bits) - 1 } function nextPixel() { if (remaining === 0) return EOF; --remaining; var pix = pixels[curPixel++]; return pix & 255 } function output(code, outs) { cur_accum &= masks[cur_bits]; if (cur_bits > 0) cur_accum |= code << cur_bits; else cur_accum = code; cur_bits += n_bits; while (cur_bits >= 8) { char_out(cur_accum & 255, outs); cur_accum >>= 8; cur_bits -= 8 } if (free_ent > maxcode || clear_flg) { if (clear_flg) { maxcode = MAXCODE(n_bits = g_init_bits); clear_flg = false } else { ++n_bits; if (n_bits == BITS) maxcode = 1 << BITS; else maxcode = MAXCODE(n_bits) } } if (code == EOFCode) { while (cur_bits > 0) { char_out(cur_accum & 255, outs); cur_accum >>= 8; cur_bits -= 8 } flush_char(outs) } } this.encode = encode } module.exports = LZWEncoder }, {}], 3: [function (require, module, exports) { var ncycles = 100; var netsize = 256; var maxnetpos = netsize - 1; var netbiasshift = 4; var intbiasshift = 16; var intbias = 1 << intbiasshift; var gammashift = 10; var gamma = 1 << gammashift; var betashift = 10; var beta = intbias >> betashift; var betagamma = intbias << gammashift - betashift; var initrad = netsize >> 3; var radiusbiasshift = 6; var radiusbias = 1 << radiusbiasshift; var initradius = initrad * radiusbias; var radiusdec = 30; var alphabiasshift = 10; var initalpha = 1 << alphabiasshift; var alphadec; var radbiasshift = 8; var radbias = 1 << radbiasshift; var alpharadbshift = alphabiasshift + radbiasshift; var alpharadbias = 1 << alpharadbshift; var prime1 = 499; var prime2 = 491; var prime3 = 487; var prime4 = 503; var minpicturebytes = 3 * prime4; function NeuQuant(pixels, samplefac) { var network; var netindex; var bias; var freq; var radpower; function init() { network = []; netindex = new Int32Array(256); bias = new Int32Array(netsize); freq = new Int32Array(netsize); radpower = new Int32Array(netsize >> 3); var i, v; for (i = 0; i < netsize; i++) { v = (i << netbiasshift + 8) / netsize; network[i] = new Float64Array([v, v, v, 0]); freq[i] = intbias / netsize; bias[i] = 0 } } function unbiasnet() { for (var i = 0; i < netsize; i++) { network[i][0] >>= netbiasshift; network[i][1] >>= netbiasshift; network[i][2] >>= netbiasshift; network[i][3] = i } } function altersingle(alpha, i, b, g, r) { network[i][0] -= alpha * (network[i][0] - b) / initalpha; network[i][1] -= alpha * (network[i][1] - g) / initalpha; network[i][2] -= alpha * (network[i][2] - r) / initalpha } function alterneigh(radius, i, b, g, r) { var lo = Math.abs(i - radius); var hi = Math.min(i + radius, netsize); var j = i + 1; var k = i - 1; var m = 1; var p, a; while (j < hi || k > lo) { a = radpower[m++]; if (j < hi) { p = network[j++]; p[0] -= a * (p[0] - b) / alpharadbias; p[1] -= a * (p[1] - g) / alpharadbias; p[2] -= a * (p[2] - r) / alpharadbias } if (k > lo) { p = network[k--]; p[0] -= a * (p[0] - b) / alpharadbias; p[1] -= a * (p[1] - g) / alpharadbias; p[2] -= a * (p[2] - r) / alpharadbias } } } function contest(b, g, r) { var bestd = ~(1 << 31); var bestbiasd = bestd; var bestpos = -1; var bestbiaspos = bestpos; var i, n, dist, biasdist, betafreq; for (i = 0; i < netsize; i++) { n = network[i]; dist = Math.abs(n[0] - b) + Math.abs(n[1] - g) + Math.abs(n[2] - r); if (dist < bestd) { bestd = dist; bestpos = i } biasdist = dist - (bias[i] >> intbiasshift - netbiasshift); if (biasdist < bestbiasd) { bestbiasd = biasdist; bestbiaspos = i } betafreq = freq[i] >> betashift; freq[i] -= betafreq; bias[i] += betafreq << gammashift } freq[bestpos] += beta; bias[bestpos] -= betagamma; return bestbiaspos } function inxbuild() { var i, j, p, q, smallpos, smallval, previouscol = 0, startpos = 0; for (i = 0; i < netsize; i++) { p = network[i]; smallpos = i; smallval = p[1]; for (j = i + 1; j < netsize; j++) { q = network[j]; if (q[1] < smallval) { smallpos = j; smallval = q[1] } } q = network[smallpos]; if (i != smallpos) { j = q[0]; q[0] = p[0]; p[0] = j; j = q[1]; q[1] = p[1]; p[1] = j; j = q[2]; q[2] = p[2]; p[2] = j; j = q[3]; q[3] = p[3]; p[3] = j } if (smallval != previouscol) { netindex[previouscol] = startpos + i >> 1; for (j = previouscol + 1; j < smallval; j++)netindex[j] = i; previouscol = smallval; startpos = i } } netindex[previouscol] = startpos + maxnetpos >> 1; for (j = previouscol + 1; j < 256; j++)netindex[j] = maxnetpos } function inxsearch(b, g, r) { var a, p, dist; var bestd = 1e3; var best = -1; var i = netindex[g]; var j = i - 1; while (i < netsize || j >= 0) { if (i < netsize) { p = network[i]; dist = p[1] - g; if (dist >= bestd) i = netsize; else { i++; if (dist < 0) dist = -dist; a = p[0] - b; if (a < 0) a = -a; dist += a; if (dist < bestd) { a = p[2] - r; if (a < 0) a = -a; dist += a; if (dist < bestd) { bestd = dist; best = p[3] } } } } if (j >= 0) { p = network[j]; dist = g - p[1]; if (dist >= bestd) j = -1; else { j--; if (dist < 0) dist = -dist; a = p[0] - b; if (a < 0) a = -a; dist += a; if (dist < bestd) { a = p[2] - r; if (a < 0) a = -a; dist += a; if (dist < bestd) { bestd = dist; best = p[3] } } } } } return best } function learn() { var i; var lengthcount = pixels.length; var alphadec = 30 + (samplefac - 1) / 3; var samplepixels = lengthcount / (3 * samplefac); var delta = ~~(samplepixels / ncycles); var alpha = initalpha; var radius = initradius; var rad = radius >> radiusbiasshift; if (rad <= 1) rad = 0; for (i = 0; i < rad; i++)radpower[i] = alpha * ((rad * rad - i * i) * radbias / (rad * rad)); var step; if (lengthcount < minpicturebytes) { samplefac = 1; step = 3 } else if (lengthcount % prime1 !== 0) { step = 3 * prime1 } else if (lengthcount % prime2 !== 0) { step = 3 * prime2 } else if (lengthcount % prime3 !== 0) { step = 3 * prime3 } else { step = 3 * prime4 } var b, g, r, j; var pix = 0; i = 0; while (i < samplepixels) { b = (pixels[pix] & 255) << netbiasshift; g = (pixels[pix + 1] & 255) << netbiasshift; r = (pixels[pix + 2] & 255) << netbiasshift; j = contest(b, g, r); altersingle(alpha, j, b, g, r); if (rad !== 0) alterneigh(rad, j, b, g, r); pix += step; if (pix >= lengthcount) pix -= lengthcount; i++; if (delta === 0) delta = 1; if (i % delta === 0) { alpha -= alpha / alphadec; radius -= radius / radiusdec; rad = radius >> radiusbiasshift; if (rad <= 1) rad = 0; for (j = 0; j < rad; j++)radpower[j] = alpha * ((rad * rad - j * j) * radbias / (rad * rad)) } } } function buildColormap() { init(); learn(); unbiasnet(); inxbuild() } this.buildColormap = buildColormap; function getColormap() { var map = []; var index = []; for (var i = 0; i < netsize; i++)index[network[i][3]] = i; var k = 0; for (var l = 0; l < netsize; l++) { var j = index[l]; map[k++] = network[j][0]; map[k++] = network[j][1]; map[k++] = network[j][2] } return map } this.getColormap = getColormap; this.lookupRGB = inxsearch } module.exports = NeuQuant }, {}], 4: [function (require, module, exports) { var GIFEncoder, renderFrame; GIFEncoder = require(\"./GIFEncoder.js\"); renderFrame = function (frame) { var encoder, page, stream, transfer; encoder = new GIFEncoder(frame.width, frame.height); if (frame.index === 0) { encoder.writeHeader() } else { encoder.firstFrame = false } encoder.setTransparent(frame.transparent); encoder.setRepeat(frame.repeat); encoder.setDelay(frame.delay); encoder.setQuality(frame.quality); encoder.setDither(frame.dither); encoder.setGlobalPalette(frame.globalPalette); encoder.addFrame(frame.data); if (frame.last) { encoder.finish() } if (frame.globalPalette === true) { frame.globalPalette = encoder.getGlobalPalette() } stream = encoder.stream(); frame.data = stream.pages; frame.cursor = stream.cursor; frame.pageSize = stream.constructor.pageSize; if (frame.canTransfer) { transfer = function () { var i, len, ref, results; ref = frame.data; results = []; for (i = 0, len = ref.length; i < len; i++) { page = ref[i]; results.push(page.buffer) } return results }(); return self.postMessage(frame, transfer) } else { return self.postMessage(frame) } }; self.onmessage = function (event) { return renderFrame(event.data) } }, { \"./GIFEncoder.js\": 1 }] }, {}, [4]);\n\n"],"sourceRoot":""}